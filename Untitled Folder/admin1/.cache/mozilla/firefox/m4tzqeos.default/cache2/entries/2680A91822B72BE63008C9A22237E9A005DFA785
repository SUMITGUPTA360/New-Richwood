{"id":"pages_controller_extension","title":"Building a Controller Extension","content":"<a name=\"pages_controller_extension\"><!-- --></a><h1 class=\"helpHead1\"><span class=\"ph\" id=\"topic-title\"><a name=\"topic-title\"><!-- --></a>Building a Controller Extension</span></h1><div class=\"body\">\n<p class=\"p\">A controller extension is any Apex class containing a constructor that takes a single argument of type <samp class=\"codeph apex_code\">ApexPages.StandardController</samp> or <var class=\"keyword varname\">CustomControllerName</var>, where <var class=\"keyword varname\">CustomControllerName</var> is the name of a custom controller you want to extend. </p>\n\n<p class=\"p\">The following class is a simple example of a controller extension:</p>\n\n<div class=\"codeSection apex_code\"><pre class=\"codeblock brush:apex\" id=\"extension_code\"><a name=\"extension_code\"><!-- --></a><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> myControllerExtension {\n\n    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Account acct;\n    \n    <span class=\"onelineComment\">// The extension constructor initializes the private member</span>\n    <span class=\"onelineComment\">// variable acct by using the getRecord method from the standard</span>\n    <span class=\"onelineComment\">// controller.</span>\n    <span class=\"keyword\">public</span> myControllerExtension(ApexPages.StandardController stdController) {\n        <span class=\"statement\">this</span>.acct = (Account)stdController.getRecord();\n    }\n\n    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> getGreeting() {\n        <span class=\"statement\">return</span> <span class=\"string\">'Hello '</span> + acct.name + <span class=\"string\">' ('</span> + acct.id + <span class=\"string\">')'</span>;\n    }\n}</pre></div>\n\n<p class=\"p\">The following Visualforce markup shows how the controller extension from above can be used\nin a page: </p>\n\n<div class=\"codeSection apex_page\"><pre class=\"codeblock brush:VisualForce\" id=\"extension_markup\"><a name=\"extension_markup\"><!-- --></a><span class=\"tag\">&lt;apex:page</span><span class=\"attribute\"> standardController=</span><span class=\"string\">\"Account\"</span><span class=\"attribute\"> extensions=</span><span class=\"string\">\"myControllerExtension\"</span>&gt;\n    <span class=\"formula\">{!greeting}</span> <span class=\"tag\">&lt;p/</span>&gt;\n    <span class=\"tag\">&lt;apex:form</span>&gt;\n        <span class=\"tag\">&lt;apex:inputField</span><span class=\"attribute\"> value=</span><span class=\"string\">\"{!account.name}\"</span>/&gt; <span class=\"tag\">&lt;p/</span>&gt;\n        <span class=\"tag\">&lt;apex:commandButton</span><span class=\"attribute\"> value=</span><span class=\"string\">\"Save\"</span><span class=\"attribute\"> action=</span><span class=\"string\">\"{!save}\"</span>/&gt;\n    <span class=\"tag\">&lt;/apex:form</span>&gt;\n<span class=\"tag\">&lt;/apex:page</span>&gt;</pre></div>\n\n<p class=\"p\">The extension is associated with the page using the <samp class=\"codeph apex_page\">extensions</samp> attribute of the <samp class=\"codeph apex_page\"><span class=\"tag\">&lt;apex:page</span>&gt;</samp> component.</p>\n\n<p class=\"p\">As with all controller methods, controller extension methods can\nbe referenced with <samp class=\"codeph apex_page\"><span class=\"formula\">{! }</span></samp> notation\nin page markup. In the example above, the <samp class=\"codeph apex_page\"><span class=\"formula\">{!greeting}</span></samp> expression at the top\nof the page references the controller extension's <samp class=\"codeph apex_code\">getGreeting</samp> method. </p>\n\n<p class=\"p\">Because this extension works in conjunction with the Account standard\ncontroller, the standard controller methods are also available. For\nexample, the <samp class=\"codeph apex_page\">value</samp> attribute\nin the <samp class=\"codeph apex_page\"><span class=\"tag\">&lt;apex:inputField</span>&gt;</samp> tag retrieves the name of the account using standard controller\nfunctionality. Likewise, the <samp class=\"codeph apex_page\"><span class=\"tag\">&lt;apex:commandButton</span>&gt;</samp> tag references the standard account <samp class=\"codeph apex_code\">save</samp> method with its <samp class=\"codeph apex_page\">action</samp> attribute.</p>\n\n<div class=\"p\">Multiple controller extensions can be defined for a single page\nthrough a comma-separated list. This allows for overrides of methods\nwith the same name. For example, if the following page exists:<div class=\"codeSection apex_page\"><pre class=\"codeblock brush:VisualForce\"><span class=\"tag\">&lt;apex:page</span><span class=\"attribute\"> standardController=</span><span class=\"string\">\"Account\"</span> \n   <span class=\"attribute\"> extensions=</span><span class=\"string\">\"ExtOne,ExtTwo\"</span><span class=\"attribute\"> showHeader=</span><span class=\"string\">\"false\"</span>&gt;\n    <span class=\"tag\">&lt;apex:outputText</span><span class=\"attribute\"> value=</span><span class=\"string\">\"{!foo}\"</span> /&gt;\n<span class=\"tag\">&lt;/apex:page</span>&gt;</pre></div>\nwith the following extensions:<div class=\"codeSection apex_code\"><pre class=\"codeblock brush:apex\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ExtOne {\n    <span class=\"keyword\">public</span> ExtOne(ApexPages.StandardController acon) { }\n\n    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> getFoo() {\n        <span class=\"statement\">return</span> <span class=\"string\">'foo-One'</span>;\n    }\n}</pre></div>\n<div class=\"codeSection apex_code\"><pre class=\"codeblock brush:apex\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ExtTwo {\n    <span class=\"keyword\">public</span> ExtTwo(ApexPages.StandardController acon) { }\n\n    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> getFoo() {\n        <span class=\"statement\">return</span> <span class=\"string\">'foo-Two'</span>;\n    }\n}</pre></div>\nThe value of the <samp class=\"codeph apex_page\"><span class=\"tag\">&lt;apex:outputText</span>&gt;</samp> component renders as <samp class=\"ph systemoutput\">foo-One</samp>. Overrides\nare defined by whichever methods are defined in the ‚Äúleftmost‚Äù\nextension, or, the extension that is first in the comma-separated\nlist. Thus, the <samp class=\"codeph nolang\">getFoo</samp> method\nof <samp class=\"codeph nolang\">ExtOne</samp> is overriding the method\nof <samp class=\"codeph nolang\">ExtTwo</samp>. </div>\n\n<div class=\"box message info\" id=\"extension_permissions\">\n<a name=\"extension_permissions\"><!-- --></a><div class=\"inner\"><div class=\"bd\"><div class=\"media\">\n<img class=\"img mtm\" src=\"//res.cloudinary.com/hy4kyit2a/image/upload/img/msg_icons/helpNote_icon.gif\" alt=\"Note\"><div class=\"mediaBd\">\n<h4 class=\"mbs\">Note</h4>\n<p>Like other Apex classes, controller extensions run in system mode. Consequently, the current\n                user's credentials are not used to execute controller logic, and the user's\n                permissions and field-level security do not apply. However, if a controller extension extends a standard controller,\nthe logic from the standard controller does not execute in system\nmode. Instead, it executes in user mode, in which the permissions,\nfield-level security, and sharing rules of the current user apply.<p class=\"p\">You can choose whether a controller extension respects a user's organization-wide\ndefaults, role hierarchy, and sharing rules by using the <samp class=\"codeph apex_code\">with sharing</samp> keywords in the class\ndefinition. For information, see\n                        ‚ÄúUsing the <samp class=\"codeph apex_code\">with sharing</samp> or <samp class=\"codeph apex_code\">without\nsharing</samp> Keywords‚Äù in the <cite class=\"cite\"><a class=\"xref\" href=\"https://developer.salesforce.com/docs/atlas.en-us.206.0.apexcode.meta/apexcode/apex_classes_keywords_sharing.htm\" target=\"_blank\" title=\"html (New Window)\">Apex Developer Guide</a></cite>.</p>\n</p>\n</div>\n</div></div></div>\n</div>\n\n</div><!--DRC 206.9-->"}p±Ú$‰µ      Xˇ‹Xˇ‹=∞ëo       l:https://developer.salesforce.com/docs/get_document_content/pages/pages_controller_extension.htm/en-us/206.0 security-info FnhllAKWRHGAlo+ESXykKAAAAAAAAAAAwAAAAAAAAEaphjojH6pBabDSgSnsfLHeAAQAAgAAAAAAAAAAAAAAAAAAAAAB4vFIJp5wRkeyPxAQ9RJGKPqbqVvKO0mKuIl8ec8o/uhmCjImkVxP+7sgiYWmMt8F+O2DZM7ZTG6GukivU8OT5gAAAAAAAAgIMIIIBDCCBuygAwIBAgIMe76S/QSV9bCdvV1zMA0GCSqGSIb3DQEBCwUAMFcxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9iYWxTaWduIG52LXNhMS0wKwYDVQQDEyRHbG9iYWxTaWduIENsb3VkU1NMIENBIC0gU0hBMjU2IC0gRzMwHhcNMTYwOTA3MDAwMzAyWhcNMTcwOTA3MjAzMDI4WjBzMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzEVMBMGA1UECgwMRmFzdGx5LCBJbmMuMSAwHgYDVQQDDBdkZXZmb3JjZS5tYXAuZmFzdGx5Lm5ldDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMIAM/79bYYn5oubh22mw37yjuwaVCCSUomsbx0DRybBGZJz+09yCEhAHlqZ+BeHHDYZR0dI1vBkdYXUQzlX0a0bOSn0ayT79gUCziYT3XFnBp+1yAJr8P+ArtZC4tIOlmVUQUjgu7UXeE/TxgbQGFuDYUJuPPPvxL7wi9KQoVm4o0IuU+kmDTLCuA3rRBW35O7sMKNwgWSdg6JhHhdbIGeJ3n/Wd7nkVs9cvaZido8tm2V25t/ApoSDS+USdJvubzm0WmMRsHa/Cx/Vtxo8k7f7JGkY8NtFaqPAdrz+t1kz+Juxuo3xYGarNSvnU6o9yaMT5NO+UskP5oUJBnS52U0CAwEAAaOCBLIwggSuMA4GA1UdDwEB/wQEAwIFoDCBigYIKwYBBQUHAQEEfjB8MEIGCCsGAQUFBzAChjZodHRwOi8vc2VjdXJlLmdsb2JhbHNpZ24uY29tL2NhY2VydC9jbG91ZHNzbHNoYTJnMy5jcnQwNgYIKwYBBQUHMAGGKmh0dHA6Ly9vY3NwMi5nbG9iYWxzaWduLmNvbS9jbG91ZHNzbHNoYTJnMzBWBgNVHSAETzBNMEEGCSsGAQQBoDIBFDA0MDIGCCsGAQUFBwIBFiZodHRwczovL3d3dy5nbG9iYWxzaWduLmNvbS9yZXBvc2l0b3J5LzAIBgZngQwBAgIwCQYDVR0TBAIwADCCA0sGA1UdEQSCA0IwggM+ghdkZXZmb3JjZS5tYXAuZmFzdGx5Lm5ldIIWKi5hZG1pbi5zYWxlc2ZvcmNlLmNvbYIWKi5ibG9vbS5zYWxlc2ZvcmNlLmNvbYIWKi5idXR0b25jbGlja2FkbWluLmNvbYIaKi5kZXZlbG9wZXIuc2FsZXNmb3JjZS5jb22CFCouZGV2ZWxvcGVyZm9yY2UuY29tgiYqLmRldmVsb3BtZW50LmRldmVsb3Blci5zYWxlc2ZvcmNlLmNvbYImKi5kZXZlbG9wbWVudC50cmFpbGhlYWQuc2FsZXNmb3JjZS5jb22CHyouZG9jcy5kZXZlbG9wZXIuc2FsZXNmb3JjZS5jb22CHSoucWEuZGV2ZWxvcGVyLnNhbGVzZm9yY2UuY29tghcqLnFhLmRldmVsb3BlcmZvcmNlLmNvbYIdKi5xYS50cmFpbGhlYWQuc2FsZXNmb3JjZS5jb22CHiouc3RhZ2luZy5hZG1pbi5zYWxlc2ZvcmNlLmNvbYIeKi5zdGFnaW5nLmJsb29tLnNhbGVzZm9yY2UuY29tgh4qLnN0YWdpbmcuYnV0dG9uY2xpY2thZG1pbi5jb22CIiouc3RhZ2luZy5kZXZlbG9wZXIuc2FsZXNmb3JjZS5jb22CHCouc3RhZ2luZy5kZXZlbG9wZXJmb3JjZS5jb22CISouc3RhZ2luZy5zdGFydHVwcy5zYWxlc2ZvcmNlLmNvbYIiKi5zdGFnaW5nLnRyYWlsaGVhZC5zYWxlc2ZvcmNlLmNvbYIZKi5zdGFydHVwcy5zYWxlc2ZvcmNlLmNvbYIaKi50cmFpbGhlYWQuc2FsZXNmb3JjZS5jb22CHioud29ya2JlbmNoLmRldmVsb3BlcmZvcmNlLmNvbYIUYWRtaW4uc2FsZXNmb3JjZS5jb22CFGJsb29tLnNhbGVzZm9yY2UuY29tghRidXR0b25jbGlja2FkbWluLmNvbYIYZGV2ZWxvcGVyLnNhbGVzZm9yY2UuY29tghJkZXZlbG9wZXJmb3JjZS5jb22CF3N0YXJ0dXBzLnNhbGVzZm9yY2UuY29tghh0cmFpbGhlYWQuc2FsZXNmb3JjZS5jb20wHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0GA1UdDgQWBBS2E3ayqL/4TdSaRFSnncZvTAql1zAfBgNVHSMEGDAWgBSpK4fhziRHOxu/z4U3AlWdDZRY5jANBgkqhkiG9w0BAQsFAAOCAQEAQOFGpYfrk0CCBi8xevyufBm8PswC5zCUOPl3f+PEnzu+/K0t1fySj5Dqzq1i1eAMvLeqsK49zSTtEYfSY+Yscdfd5QShnom2XkF5TErs05bJedTJyAAcq1w16+TQbTkcKDR1lLi4vLzap5mfATWwyKaQFBsMuwkPZV03FtEjnxAjAnN2e118LXueQgzvpjNhyav/JeaMCFbn+Ju0N0zVG0POP7zcZPJqJN7uUgoyxBFHKASwIZW1Ru4g3pGXwttRxLQlLS1tsljEPl4vi3E+OUPmd1BK4506wzlWOdxX3BNCHq5DDYL/uhdrH7txG1JF7YzqaNviWxk/ugXHImorQMAvAAMAAAAAAQEAAA== request-method GET response-head HTTP/1.1 200 OK
Server: nginx
Content-Type: application/json; charset=utf-8
X-Frame-Options: SAMEORIGIN
X-XSS-Protection: 1; mode=block
X-Content-Type-Options: nosniff
p3p: CP="ALL DSP COR CURa ADMa DEVa OUR IND COM NAV"
Etag: W/"48a632054714a1c699ecaae9363e42a6"
Cache-Control: max-age=0, private, must-revalidate
X-Runtime: 0.021086
Via: 1.1 vegur, 1.1 varnish
Accept-Ranges: bytes
Date: Tue, 25 Apr 2017 13:34:06 GMT
Age: 0
x-request-id: 35bbbecf904dedf2f228671a42a030dbe763006d
X-Served-By: cache-sin18020-SIN
X-Cache: MISS
X-Cache-Hits: 0
X-Timer: S1493127246.987303,VS0,VE273
    v